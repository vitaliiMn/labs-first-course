#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define N 2
#define M 3

int Getmax(int *indexes, int *values, int n) {
    int i;
    int max = 0;
    for(i = 0; i < n; ++i) {
        if(abs(values[i]) > abs(max)) {
            max = values[i];
        } 
    }
    return max;
}

int Del(int *indexes, int *values, int n, int max) {
    int mass[N];
    int i;
    for(i = 0; i < N; ++i) {
        mass[i] = 0;
    }
    for(i = 0; i < n; ++i) {
        if(values[i] == max) {
            ++mass[indexes[i]/M];
        }
    }
    for(i = 0; i < n; ++i) {
        if(mass[indexes[i]/M] > 0) {
            values[i] = values[i] / max;
        }
    }
}

void PrintMatrix(int *indexes, int *values, int n) {
    int number = 0;
    int i = 0;
    while(number < N * M) {
        if(i == n) {
            printf("0 ");
            if(number % M == 0) {
                printf("\n");
            }
            ++number;
            continue;
        }
        if(number == indexes[i]) {
            printf("%d ", values[i]);
            ++i;
            ++number;
        } else {
            printf("0 ");
            ++number;
        }
        if(number % M == 0) {
            printf("\n");
        }
    }
}

void PrintList(int *indexes, int *values, int n) {
    int i;
    for(i = 0; i < n; ++i) {
        printf("%d %d \n", indexes[i], values[i]);
    }
}

int main() {
    int i, j, n, value, number = 0;
    int size = N * M;
    int indexes[size];
    int values[size];
    for (i = 1; i <= N; ++i) {
        for (j = 1; j <= M; ++j) {
            scanf("%d", &value);
            if (value != 0) {
                indexes[number] = (i - 1) * M + j - 1;
                values[number] = value;
                ++number;
            }
        }
    }
    ++number;
    n = number;
    int max = Getmax(indexes, values, n);
    Del(indexes, values, n, max);
    PrintMatrix(indexes, values, n);
    PrintList(indexes, values, n);
    return 0;
}
